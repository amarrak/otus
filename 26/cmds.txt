docker build -t amarrak/sitecandidate:v1.2 .
docker push amarrak/sitecandidate:v1.2

docker build -t amarrak/sitevacancy:v1.2 .
docker push amarrak/sitevacancy:v1.2

kubectl create namespace myapp-vacancy
kubectl create namespace myapp-candidate

helm repo add bitnami https://charts.bitnami.com/bitnami

helm install mmsv bitnami/mysql -f ./helm_values/valuesv.yaml -n myapp-vacancy
helm install mmsc bitnami/mysql -f ./helm_values/valuesc.yaml -n myapp-candidate


docker build -t amarrak/sitecandidate:v1.4 .
docker push amarrak/sitecandidate:v1.4
kubectl set image deployment/app-candidate-php-deployment php=amarrak/sitecandidate:v1.4 -n myapp-candidate --record
kubectl get all -n myapp-candidate

docker build -t amarrak/sitevacancy:v1.4 .
docker push amarrak/sitevacancy:v1.4
kubectl set image deployment/app-vacancy-php-deployment php=amarrak/sitevacancy:v1.4 -n myapp-vacancy --record

kubectl describe pod  app-candidate-php-deployment-6b95cd69b5-8sp6v -n myapp-candidate

kubectl set image deployment/app-auth-php-deployment php=amarrak/site:v1.23 -n myapp --record
kubectl apply -f .

minikube service nginx-service -n myapp --url
kubectl port-forward service/prom-prometheus-operator-prometheus 9091:9090
kubectl config set-context --current --namespace=monitoring

minikube service mysql -n myapp --url
mysql --host=192.168.99.100 --port=31356 --user=root --password=password
kubectl exec --stdin --tty mysql-master-0 -- /bin/bash


=================================================
kubectl create namespace rabbit
helm repo add bitnami https://charts.bitnami.com/bitnami
helm install rab bitnami/rabbitmq --namespace rabbit

// https://artifacthub.io/packages/helm/bitnami/rabbitmq

NAME: rab
LAST DEPLOYED: Sat Oct 10 12:24:37 2020
NAMESPACE: rabbit
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
** Please be patient while the chart is being deployed **

Credentials:

    echo "Username      : user"
    echo "Password      : $(kubectl get secret --namespace rabbit rab-rabbitmq -o jsonpath="{.data.rabbitmq-password}" | base64 --decode)"
    echo "ErLang Cookie : $(kubectl get secret --namespace rabbit rab-rabbitmq -o jsonpath="{.data.rabbitmq-erlang-cookie}" | base64 --decode)"

RabbitMQ can be accessed within the cluster on port  at rab-rabbitmq.rabbit.svc.

To access for outside the cluster, perform the following steps:

To Access the RabbitMQ AMQP port:

    echo "URL : amqp://127.0.0.1:5672/"
    kubectl port-forward --namespace rabbit svc/rab-rabbitmq 5672:5672

To Access the RabbitMQ Management interface:

    echo "URL : http://127.0.0.1:15672/"
    kubectl port-forward --namespace rabbit svc/rab-rabbitmq 15672:15672


helm delete rab --namespace rabbit

=================================================


helm install mmsv bitnami/mysql -f ./helm_values/valuesv.yaml -n myapp-vacancy

NAME: mmsv
LAST DEPLOYED: Sun Oct 11 11:07:12 2020
NAMESPACE: myapp-vacancy
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Please be patient while the chart is being deployed

Tip:

  Watch the deployment status using the command: kubectl get pods -w --namespace myapp-vacancy

Services:

  echo Master: mysqlv.myapp-vacancy.svc.cluster.local:3306

Administrator credentials:

  echo Username: root
  echo Password : $(kubectl get secret --namespace myapp-vacancy mysqlv -o jsonpath="{.data.mysql-root-password}" | base64 --decode)

To connect to your database:

  1. Run a pod that you can use as a client:

      kubectl run mysqlv-client --rm --tty -i --restart='Never' --image  docker.io/bitnami/mysql:8.0.21-debian-10-r46 --namespace myapp-vacancy --command -- bash

  2. To connect to master service (read/write):

      mysql -h mysqlv.myapp-vacancy.svc.cluster.local -uroot -p myapp

To upgrade this helm chart:

  1. Obtain the password as described on the 'Administrator credentials' section and set the 'root.password' parameter as shown below:

      ROOT_PASSWORD=$(kubectl get secret --namespace myapp-vacancy mysqlv -o jsonpath="{.data.mysql-root-password}" | base64 --decode)
      helm upgrade mmsv bitnami/mysql --set root.password=$ROOT_PASSWORD

================================================

helm install mmsc bitnami/mysql -f ./helm_values/valuesc.yaml -n myapp-candidate

NAME: mmsc
LAST DEPLOYED: Sun Oct 11 11:10:39 2020
NAMESPACE: myapp-candidate
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Please be patient while the chart is being deployed

Tip:

  Watch the deployment status using the command: kubectl get pods -w --namespace myapp-candidate

Services:

  echo Master: mysqlc.myapp-candidate.svc.cluster.local:3306

Administrator credentials:

  echo Username: root
  echo Password : $(kubectl get secret --namespace myapp-candidate mysqlc -o jsonpath="{.data.mysql-root-password}" | base64 --decode)

To connect to your database:

  1. Run a pod that you can use as a client:

      kubectl run mysqlc-client --rm --tty -i --restart='Never' --image  docker.io/bitnami/mysql:8.0.21-debian-10-r46 --namespace myapp-candidate --command -- bash

  2. To connect to master service (read/write):

      mysql -h mysqlc.myapp-candidate.svc.cluster.local -uroot -p myapp

To upgrade this helm chart:

  1. Obtain the password as described on the 'Administrator credentials' section and set the 'root.password' parameter as shown below:

      ROOT_PASSWORD=$(kubectl get secret --namespace myapp-candidate mysqlc -o jsonpath="{.data.mysql-root-password}" | base64 --decode)
      helm upgrade mmsc bitnami/mysql --set root.password=$ROOT_PASSWORD

=============================================

