openapi: 3.0.0
info:
  title: Оформление заказа
  version: 0.1.0
tags:
  - name: user
    description: Сервис работы с пользователем
  - name: order
    description: Сервис оформления заказа
  - name: billing
    description: Сервис биллинга
  - name: notification
    description: Сервис нотификаций
paths:
  /users/register:
    post:
      tags:
        - user
      summary: Регистрация пользователя
      description: Регистрация пользователя. При регистрации создается счет в системе биллинга
      operationId: registerUser
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        '201':
          description: Регистрация прошла успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserId'
        '400':
          description: Неправильный запрос
  '/users/{userId}':
    get:
      tags:
        - user
      summary: Ресурс пользователя по ID
      description: Вернуть данные пользователя
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неправильный запрос
        '404':
          description: Такого пользователя нет
  /accounts/create:
    post:
      tags:
        - billing
      summary: Создание счета
      description: Создание счета пользователя
      operationId: createAccount
      requestBody:
        $ref: '#/components/requestBodies/UserId'
      responses:
        '201':
          description: Создание счета прошло успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountId'
        '400':
          description: Неправильный запрос
  /accounts/deposit:
    post:
      tags:
        - billing
      summary: Внесение денег на счет
      description: Внесение денег на счет
      operationId: depositAccount
      requestBody:
        $ref: '#/components/requestBodies/AccountTransaction'
      responses:
        '200':
          description: Деньги внесены успешно
        '400':
          description: Неправильный запрос
        '404':
          description: Пользователь не найден
  /accounts/withdraw:
    post:
      tags:
        - billing
      summary: Списание денег со счета
      description: Списание денег со счета
      operationId: withdrawAccount
      requestBody:
        $ref: '#/components/requestBodies/AccountTransaction'
      responses:
        '200':
          description: Деньги списаны успешно
        '400':
          description: Денег недостаточно
        '404':
          description: Пользователь не найден
  /orders/create:
    post:
      tags:
        - order
      summary: Создание заказа
      description: Создание заказа. При создании заказа списываются деньги в системе биллинга и отправляется нотификация
      operationId: createOrder
      requestBody:
        $ref: '#/components/requestBodies/Order'
      responses:
        '201':
          description: Заказ создан успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderId'
        '400':
          description: Недостаточно денег на счете
        '404':
          description: Пользователь не найден
  /send_email:
    post:
      tags:
        - notification
      summary: Отослать email на почту
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                templateId:
                  type: integer
                context: 
                  type: object
              required: 
                - email
                - templateId
                - context
            example: 
              email: "vasya@pupkin.ru"
              templateId: 42
              context: 
                firstName: vasya
                lastName: pupkin
                orderId: 12
      responses:
        '202':
          description: Отсылка взята в работу
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId: 
                    type: string
              example: 
                jobId: 000123234091234
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        address:
          type: string
      required: 
          - username
          - password
          - email
    UserId:
      type: object
      properties:
        id:
          type: integer
          format: int64
      required: 
          - id
    AccountId:
      type: object
      properties:
        id:
          type: integer
          format: int64
      required: 
          - id
    Order:
      type: object
      properties:
        userid:
          type: integer
          format: int64
        sum:
          type: integer
          format: int64
      required: 
          - userid
          - sum
    OrderId:
      type: object
      properties:
        id:
          type: integer
          format: int64
      required: 
          - id
    AccountTransaction:
      type: object
      properties:
        userid:
          type: integer
          format: int64
        sum:
          type: integer
          format: int64
      required: 
          - userid
          - sum
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
          examples:
            sample-user:
              summary: Обычный пользователь
              value:
                username: johndoe589
                firstName: John
                lastName: Doe
                email: bestjohn@doe.com
                phone: '+71002003040'
                password: 'Jsd28xzd'
                address: 'ул Большая Филевская д 16 кв 19'
      description: User object that needs to be created
      required: true
    UserId:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserId'
          examples:
            sample-user:
              summary: Обычный пользователь
              value:
                id: 0
      description: Код пользователя для создания счета
      required: true
    Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
          examples:
            sample-order:
              summary: Обычный заказ
              value:
                userid: 0
                sum: 100
      description: Заказ, который нужно создать
      required: true
    AccountTransaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountTransaction'
          examples:
            sample-transaction:
              summary: Обычная транзакция
              value:
                userid: 0
                sum: 100
      description: Транзакция, которую нужно применить к счету
      required: true
